{"version":3,"sources":["./src/app/portfolio/portfolio-routing.module.ts","./src/app/portfolio/skills/skills.component.ts","./src/app/portfolio/skills/skills.component.html","./src/app/portfolio/portfolio.module.ts","./src/app/core/services/projects.service.ts","./src/app/core/services/skills.service.ts","./src/app/core/services/resume.service.ts","./src/app/portfolio/home/home.component.html","./src/app/portfolio/home/home.component.ts","./src/app/portfolio/projects/projects.component.ts","./src/app/portfolio/projects/projects.component.html","./src/app/portfolio/resume/resume.component.html","./src/app/portfolio/resume/resume.component.ts"],"names":[],"mappings":"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","file":"portfolio-portfolio-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ResumeComponent } from './resume/resume.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'skills', component: SkillsComponent },\n  { path: 'resume', component: ResumeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PortfolioRoutingModule { }","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { SkillsService } from '../../core/services/skills.service';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent {\n\n  isHome$ = this.headerService.isHome();\n  skills$ = this.isHome$.pipe(\n    mergeMap(atHome => this.skillsService.getSkills(atHome))\n  );\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex d-flex d-md-none', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n  ];\n\n  constructor(private skillsService: SkillsService, private headerService: HeaderService) { }\n}","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center justify-content-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Skills</h1>\n    <div class=\"skill-box\" [ngClass]=\"{'justify-content-center flex-wrap': !options.displayInColumn, 'flex-column  align-items-center': options.displayInColumn}\"\n        *ngIf=\"skills$ | async as skills\">\n        <div *ngFor=\"let skill of skills\" class=\"card skill-card m-3\" [ngClass]=\"{'m-3': !options.displayInColumn, 'mb-3': options.displayInColumn}\">\n            <div class=\"main-card\">\n                <div class=\"card-header\">\n                    <div class=\"skill-title\" [title]=\"skill.name\">\n                        {{skill.name}}\n                        <i [ngClass]=\"skill.stack.icon\"></i>\n                    </div>\n                    <button id={{skill.name}} onclick=\"toggleSkills(this.id)\" class=\"skill-dropdown\" unselectable=\"on\">\n                        <i class=\"fas fa-angle-down\"></i>\n                    </button>\n                </div>\n                <div id='child-{{skill.name}}' class=\"description-content hide\"> <!--- the prefix to {{skill.name}} is irrelevant. Simply used to uniquely identify the div -->\n                    <p class=\"ml-3\">{{skill.description}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PortfolioRoutingModule } from './portfolio-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ResumeComponent } from './resume/resume.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    ProjectsComponent,\n    SkillsComponent,\n    ResumeComponent\n  ],\n  imports: [\n    CommonModule,\n    PortfolioRoutingModule\n  ]\n})\nexport class PortfolioModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, mergeAll, toArray } from 'rxjs/operators';\nimport { Project } from '../models/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private http: HttpClient) { }\n\n  // gets the projects from the assets/json/projects.json file\n  getProjects(featured?: boolean): Observable<Project[]> {\n    let projects$ = this.http.get<Project[]>('assets/json/projects.json');\n\n    if (featured) {\n      return projects$.pipe(\n        mergeAll(),\n        filter(project => project.featured || false),\n        toArray()\n      );\n    }\n\n    return projects$;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, mergeAll, toArray } from 'rxjs/operators';\nimport { Skill } from '../models/skill';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillsService {\n\n  constructor(private http: HttpClient) { }\n\n  // gets the Skills from the assets/json/projects.json file\n  getSkills(featured?: boolean): Observable<Skill[]> {\n    let skills$ = this.http.get<Skill[]>('assets/json/skills.json');\n\n    if (featured) {\n      return skills$.pipe(\n        mergeAll(),\n        filter(skill => skill.featured || false),\n        toArray()\n      );\n    }\n\n    return skills$;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  constructor(private http: HttpClient) { }\n\n}\n","<div class=\"d-flex flex-column justify-content-center align-items-center w-100\" *ngIf=\"bio$ | async as bio\">\n    <div class=\"d-flex flex-column min-vh-95 justify-content-center align-items-center w-100\">\n        <div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column justify-content-center align-items-start w-75\">\n            <div class=\"d-flex align-items-center\">\n                <!--- LARGE HEADLINE NAME -->\n                <h1 [ngClass]=\"options.headingClass\" class=\"text-left current-mode-font-color\">I'm \n                    <span class=\"current-mode-font-color bold\">{{bio.firstName+' '+bio.lastName}}.</span>\n                </h1>\n                <!--- PROFILE PHOTO -->\n                <img src=\"./assets/images/profile_photo.PNG\" class=\"fit\" alt=\"Profile Photo\">\n            </div>\n            <!--- BIO INTRO -->\n            <div *ngFor=\"let content of bio.intro\">\n                <h4 class=\"text-left current-mode-font-color\" *ngIf=\"!options.useSmallerHeadings\">{{content}}</h4>\n                <h5 class=\"text-left current-mode-font-color\" *ngIf=\"options.useSmallerHeadings\">{{content}}</h5>\n            </div>\n            <!--- BIO ABOUT -->\n            <div *ngFor=\"let content of bio.about\">\n                <h4 class=\"text-left current-mode-font-color\" *ngIf=\"!options.useSmallerHeadings\">{{content}}</h4>\n                <h5 class=\"text-left current-mode-font-color\" *ngIf=\"options.useSmallerHeadings\">{{content}}</h5>\n            </div>\n            <button class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\" routerLink=\"/\" fragment=\"projects\">\n                See My Work\n                <i class=\"ml-1 fas fa-angle-right\"></i> \n            </button>\n        </div>\n    </div>\n\n    <!--- SKILLS PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-skills id=\"skills\" class=\"mb-3\"></app-skills>\n\n    <!--- PROJECTS PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-projects id=\"projects\" class=\"mb-5\"></app-projects>\n\n    <!--- RESUME PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-resume id=\"resume\" class=\"mb-5\"></app-resume>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BioService } from '../../core/services/bio.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  bio$ = this.bioService.getBio();\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', headingClass: 'display-3', useSmallerHeadings: false },\n    { viewClasses: 'd-flex d-md-none', headingClass: '', useSmallerHeadings: true }\n  ];\n\n  constructor(private bioService: BioService) { }\n}\n","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { ProjectsService } from '../../core/services/projects.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent {\n  isHome$ = this.headerService.isHome();\n  projects$ = this.isHome$.pipe(\n    mergeMap(atHome => this.projectsService.getProjects(atHome))\n  );\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n    { viewClasses: 'd-flex d-md-none', displayInColumn: true, useSmallerHeadings: true, titleClasses: '' }\n  ];\n\n  constructor(private projectsService: ProjectsService, private headerService: HeaderService) { }\n}","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Projects</h1>\n    <div class=\"d-flex vw-90\" \n        [ngClass]=\"{'justify-content-center flex-wrap': !options.displayInColumn, 'flex-column  align-items-center': options.displayInColumn}\"\n        *ngIf=\"projects$ | async as projects\">\n        <div *ngFor=\"let project of projects\" class=\"card project-card m-3\"\n            [ngClass]=\"{'m-3': !options.displayInColumn, 'mb-3': options.displayInColumn}\">\n            <div class=\"card-body d-flex flex-column\">\n                <h5 class=\"card-title font-weight-bold text-left project-title\" [title]=\"project.name\">\n                    {{project.name}}\n                </h5>\n                <h6 class=\"card-subtitle mb-2 font-weight-lighter text-left\">\n                    <div class=\"logo-box\">\n                        <div *ngFor=\"let src of project.tool_src; let i = index\">\n                            <img class=\"tool-logo\" src={{src}} title=\"{{project.tool_name[i]}}\">\n                        </div>\n                    </div>\n                </h6>\n                <p class=\"card-text text-left description\">\n                    {{project.description}}\n                </p>\n                <div class=\"project-link-box\">\n                    <a [href]=\"project.link1\" target=\"_blank\" *ngIf=\"project.link1\" class=\"btn btn-dark mr-2 project-button\">\n                        <i class=\"fa-lg mr-1 far fa-eye\"></i>\n                        {{project.link1_name}}\n                    </a>\n                    <a [href]=\"project.link2\" target=\"_blank\" *ngIf=\"project.link2\" class=\"btn btn-dark project-button\">\n                        <i class=\"fa-lg mr-1 fab fa-github-alt\"></i>\n                        {{project.link2_name}}\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button *ngIf=\"isHome$ | async\" routerLink=\"/projects\" class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\">\n        See More Projects\n        <i class=\"ml-1 fas fa-angle-right\"></i>\n    </button>\n</div>","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Resume</h1>\n    <div class=\"card project-card m-3\">\n        <a href=\"./assets/images/MRL_Resume.pdf\" target=\"_blank\"><img class=\"resume\" src=\"./assets/images/MRL_Resume.png\" alt=\"MRL_Resume\"></a>\n    </div>\n    <button class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\">\n        <a href=\"./assets/images/MRL_Resume.pdf\" target=\"_blank\" class=\"link-button\">\n            Find it Here\n        </a>\n        <i class=\"ml-1 fas fa-angle-right\"></i>\n    </button>\n</div>","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { ResumeService } from '../../core/services/resume.service';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent {\n  isHome$ = this.headerService.isHome();\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n    { viewClasses: 'd-flex d-md-none', displayInColumn: true, useSmallerHeadings: true, titleClasses: '' }\n  ];\n\n  constructor(private resumeService: ResumeService, private headerService: HeaderService) { }\n}"],"sourceRoot":"webpack:///"}