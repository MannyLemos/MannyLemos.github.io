{"version":3,"sources":["webpack:///src/app/portfolio/portfolio-routing.module.ts","webpack:///src/app/portfolio/skills/skills.component.ts","webpack:///src/app/portfolio/skills/skills.component.html","webpack:///src/app/portfolio/portfolio.module.ts","webpack:///src/app/core/services/projects.service.ts","webpack:///src/app/core/services/skills.service.ts","webpack:///src/app/core/services/resume.service.ts","webpack:///src/app/portfolio/home/home.component.html","webpack:///src/app/portfolio/home/home.component.ts","webpack:///src/app/portfolio/projects/projects.component.ts","webpack:///src/app/portfolio/projects/projects.component.html","webpack:///src/app/portfolio/resume/resume.component.html","webpack:///src/app/portfolio/resume/resume.component.ts"],"names":["routes","path","component","PortfolioRoutingModule","forChild","SkillsComponent","skillsService","headerService","isHome$","isHome","skills$","pipe","atHome","getSkills","respOptions","viewClasses","displayInColumn","useSmallerHeadings","titleClasses","PortfolioModule","ProjectsService","http","featured","projects$","get","project","SkillsService","skill","ResumeService","HomeComponent","bioService","bio$","getBio","headingClass","ProjectsComponent","projectsService","getProjects","ResumeComponent","resumeService"],"mappings":"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","file":"portfolio-portfolio-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ResumeComponent } from './resume/resume.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'skills', component: SkillsComponent },\n  { path: 'resume', component: ResumeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PortfolioRoutingModule { }","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { SkillsService } from '../../core/services/skills.service';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css']\n})\nexport class SkillsComponent {\n\n  isHome$ = this.headerService.isHome();\n  skills$ = this.isHome$.pipe(\n    mergeMap(atHome => this.skillsService.getSkills(atHome))\n  );\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex d-flex d-md-none', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n  ];\n\n  constructor(private skillsService: SkillsService, private headerService: HeaderService) { }\n}","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center justify-content-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Skills</h1>\n    <div class=\"skill-box\" [ngClass]=\"{'justify-content-center flex-wrap': !options.displayInColumn, 'flex-column  align-items-center': options.displayInColumn}\"\n        *ngIf=\"skills$ | async as skills\">\n        <div *ngFor=\"let skill of skills\" class=\"card skill-card m-3\" [ngClass]=\"{'m-3': !options.displayInColumn, 'mb-3': options.displayInColumn}\">\n            <div class=\"main-card\">\n                <div class=\"card-header\">\n                    <div class=\"skill-title\" [title]=\"skill.name\">\n                        {{skill.name}}\n                        <i [ngClass]=\"skill.stack.icon\"></i>\n                    </div>\n                    <button id={{skill.name}} onclick=\"toggleSkills(this.id)\" class=\"skill-dropdown\" unselectable=\"on\">\n                        <i class=\"fas fa-angle-down\"></i>\n                    </button>\n                </div>\n                <div id='child-{{skill.name}}' class=\"description-content hide\"> <!--- the prefix to {{skill.name}} is irrelevant. Simply used to uniquely identify the div -->\n                    <p class=\"ml-3\">{{skill.description}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PortfolioRoutingModule } from './portfolio-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ResumeComponent } from './resume/resume.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    ProjectsComponent,\n    SkillsComponent,\n    ResumeComponent\n  ],\n  imports: [\n    CommonModule,\n    PortfolioRoutingModule\n  ]\n})\nexport class PortfolioModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, mergeAll, toArray } from 'rxjs/operators';\nimport { Project } from '../models/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n\n  constructor(private http: HttpClient) { }\n\n  // gets the projects from the assets/json/projects.json file\n  getProjects(featured?: boolean): Observable<Project[]> {\n    let projects$ = this.http.get<Project[]>('assets/json/projects.json');\n\n    if (featured) {\n      return projects$.pipe(\n        mergeAll(),\n        filter(project => project.featured || false),\n        toArray()\n      );\n    }\n\n    return projects$;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, mergeAll, toArray } from 'rxjs/operators';\nimport { Skill } from '../models/skill';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillsService {\n\n  constructor(private http: HttpClient) { }\n\n  // gets the Skills from the assets/json/projects.json file\n  getSkills(featured?: boolean): Observable<Skill[]> {\n    let skills$ = this.http.get<Skill[]>('assets/json/skills.json');\n\n    if (featured) {\n      return skills$.pipe(\n        mergeAll(),\n        filter(skill => skill.featured || false),\n        toArray()\n      );\n    }\n\n    return skills$;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  constructor(private http: HttpClient) { }\n\n}\n","<div class=\"d-flex flex-column justify-content-center align-items-center w-100\" *ngIf=\"bio$ | async as bio\">\n    <div class=\"d-flex flex-column min-vh-95 justify-content-center align-items-center w-100\">\n        <div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column justify-content-center align-items-start w-75\">\n            <div class=\"d-flex align-items-center\">\n                <!--- LARGE HEADLINE NAME -->\n                <h1 [ngClass]=\"options.headingClass\" class=\"text-left current-mode-font-color\">I'm \n                    <span class=\"current-mode-font-color bold\">{{bio.firstName+' '+bio.lastName}}.</span>\n                </h1>\n                <!--- PROFILE PHOTO -->\n                <img src=\"./assets/images/profile_photo.PNG\" class=\"fit\" alt=\"Profile Photo\">\n            </div>\n            <!--- BIO INTRO -->\n            <div *ngFor=\"let content of bio.intro\">\n                <h4 class=\"text-left current-mode-font-color\" *ngIf=\"!options.useSmallerHeadings\">{{content}}</h4>\n                <h5 class=\"text-left current-mode-font-color\" *ngIf=\"options.useSmallerHeadings\">{{content}}</h5>\n            </div>\n            <!--- BIO ABOUT -->\n            <div *ngFor=\"let content of bio.about\">\n                <h4 class=\"text-left current-mode-font-color\" *ngIf=\"!options.useSmallerHeadings\">{{content}}</h4>\n                <h5 class=\"text-left current-mode-font-color\" *ngIf=\"options.useSmallerHeadings\">{{content}}</h5>\n            </div>\n            <button class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\" routerLink=\"/\" fragment=\"projects\">\n                See My Work\n                <i class=\"ml-1 fas fa-angle-right\"></i> \n            </button>\n        </div>\n    </div>\n\n    <!--- SKILLS PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-skills id=\"skills\" class=\"mb-3\"></app-skills>\n\n    <!--- PROJECTS PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-projects id=\"projects\" class=\"mb-5\"></app-projects>\n\n    <!--- RESUME PREVIEW -->\n    <div class=\"d-none d-md-block mt-5\"></div>\n    <app-resume id=\"resume\" class=\"mb-5\"></app-resume>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BioService } from '../../core/services/bio.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  bio$ = this.bioService.getBio();\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', headingClass: 'display-3', useSmallerHeadings: false },\n    { viewClasses: 'd-flex d-md-none', headingClass: '', useSmallerHeadings: true }\n  ];\n\n  constructor(private bioService: BioService) { }\n}\n","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { ProjectsService } from '../../core/services/projects.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent {\n  isHome$ = this.headerService.isHome();\n  projects$ = this.isHome$.pipe(\n    mergeMap(atHome => this.projectsService.getProjects(atHome))\n  );\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n    { viewClasses: 'd-flex d-md-none', displayInColumn: true, useSmallerHeadings: true, titleClasses: '' }\n  ];\n\n  constructor(private projectsService: ProjectsService, private headerService: HeaderService) { }\n}","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Projects</h1>\n    <div class=\"d-flex vw-90\" \n        [ngClass]=\"{'justify-content-center flex-wrap': !options.displayInColumn, 'flex-column  align-items-center': options.displayInColumn}\"\n        *ngIf=\"projects$ | async as projects\">\n        <div *ngFor=\"let project of projects\" class=\"card project-card m-3\"\n            [ngClass]=\"{'m-3': !options.displayInColumn, 'mb-3': options.displayInColumn}\">\n            <div class=\"card-body d-flex flex-column\">\n                <h5 class=\"card-title font-weight-bold text-left project-title\" [title]=\"project.name\">\n                    {{project.name}}\n                </h5>\n                <h6 class=\"card-subtitle mb-2 font-weight-lighter text-left\">\n                    <div class=\"logo-box\">\n                        <div *ngFor=\"let src of project.tool_src; let i = index\">\n                            <img class=\"tool-logo\" src={{src}} title=\"{{project.tool_name[i]}}\">\n                        </div>\n                    </div>\n                </h6>\n                <p class=\"card-text text-left description\">\n                    {{project.description}}\n                </p>\n                <div class=\"project-link-box\">\n                    <a [href]=\"project.link1\" target=\"_blank\" *ngIf=\"project.link1\" class=\"btn btn-dark mr-2 project-button\">\n                        <i class=\"fa-lg mr-1 far fa-eye\"></i>\n                        {{project.link1_name}}\n                    </a>\n                    <a [href]=\"project.link2\" target=\"_blank\" *ngIf=\"project.link2\" class=\"btn btn-dark project-button\">\n                        <i class=\"fa-lg mr-1 fab fa-github-alt\"></i>\n                        {{project.link2_name}}\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    <button *ngIf=\"isHome$ | async\" routerLink=\"/projects\" class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\">\n        See More Projects\n        <i class=\"ml-1 fas fa-angle-right\"></i>\n    </button>\n</div>","<div *ngFor=\"let options of respOptions\" [ngClass]=\"options.viewClasses\" class=\"flex-column align-items-center text-center vw-90 mx-auto\">\n    <h1 [ngClass]=\"options.titleClasses\" class=\"mb-5 current-mode-font-color\"><span class=\"current-mode-font-color bold\">My</span> Resume</h1>\n    <div class=\"card project-card m-3\">\n        <a href=\"./assets/images/Manuel_Lemos_CV_2023.pdf\" target=\"_blank\"><img class=\"resume\" src=\"./assets/images/Manuel_Lemos_CV_2023.PNG\" alt=\"Manuel_Lemos_CV_2023\"></a>\n    </div>\n    <button class=\"mt-3 mb-5 btn bold light-border current-mode-button current-mode-font-color\">\n        <a href=\"./assets/images/Manuel_Lemos_CV_2023.pdf\" target=\"_blank\" class=\"link-button\">\n            Find it Here\n        </a>\n        <i class=\"ml-1 fas fa-angle-right\"></i>\n    </button>\n</div>","import { Component } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { HeaderService } from '../../core/services/header.service';\nimport { ResumeService } from '../../core/services/resume.service';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css']\n})\nexport class ResumeComponent {\n  isHome$ = this.headerService.isHome();\n\n  respOptions = [\n    { viewClasses: 'd-none d-md-flex', displayInColumn: false, useSmallerHeadings: false, titleClasses: 'display-3' },\n    { viewClasses: 'd-flex d-md-none', displayInColumn: true, useSmallerHeadings: true, titleClasses: '' }\n  ];\n\n  constructor(private resumeService: ResumeService, private headerService: HeaderService) { }\n}"]}